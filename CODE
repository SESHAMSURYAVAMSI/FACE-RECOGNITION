import cv2
import numpy as np
import time
# Load HAAR face classifier
face_classifier = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

def face_extractor(img):

    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
    faces = face_classifier.detectMultiScale(gray, 1.3, 5)

    if faces == ():
        return None

    for (x,y,w,h) in faces:
        cropped_face = img[y:y+h, x:x+w]

    return cropped_face

cap = cv2.VideoCapture(0)
count = 0
lst=[]
start_time=time.time()
elapsed_time=time.time()
while True:

    ret, img = cap.read()
    print(ret)
    if face_extractor(img) is not None:
        start_time = time.time()
        face = cv2.resize(face_extractor(img), (200, 200))
        face = cv2.cvtColor(face, cv2.COLOR_BGR2GRAY)

        cv2.putText(face, str(time.clock()), (50, 50), cv2.FONT_HERSHEY_COMPLEX, 1, (0,255,0), 2)
        cv2.imshow('Face Cropper', face)

    else:

        print("Face not found")
        elapsed_time = time.time() - start_time
        lst.append(elapsed_time)
        seconds=0
        time.sleep(1)
        pass
    cv2.imshow('img', img)
    k = cv2.waitKey(30) & 0xff
    if k == 13:
        # 13 is the Enter Key
        break

cap.release()
cv2.destroyAllWindows()
print("Collecting Samples Complete")
